import 'yuecheck.macros' as { $ }

stripq = (str) -> str\gsub "[\"']", ''

stripnl = (str) -> str\gsub "(.+)\n+", '%1'

readfile = (fname) ->
  fp, err = io.open fname, 'r'
  if err
    return nil, err

  d = fp\read 'a*'
  unless fp\close!
    return d, "unable to close #{ fname }"

  d

-- example: exec_cmd_w [[ yue -e 'print _VERSION .. os.getenv '\''VAR'\''' ]], { env: { 'VAR': 'xyz' } }
-- see:
--   https://man7.org/linux/man-pages/man3/popen.3.html
exec_cmd_w = (cmd, opts = {}) ->
  if opts.chdir
    cmd = "cd #{ opts.chdir } && #{ cmd }"
  if opts.env
    for k, v in pairs opts.env
      cmd = "#{ k }='#{ v }' #{ cmd }"

  p = io.popen cmd, 'w'
  p\write opts.stdin
  p\close!

match_any = (str, pats) ->
  for p in *pats
    if str\match p
      return p

-- lazy dedup
dedup = (t) ->
  uniq = {}
  vals = {}
  for v in *t
    if uniq[v]
      continue
    uniq[v] = v
    vals[] = v
  vals

export default {
  :exec_cmd_w
  :readfile
  :stripnl
  :stripq

  :match_any

  :dedup
}
